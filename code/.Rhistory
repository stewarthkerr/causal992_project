datsd <- filter(dat1, variable==c("sdMR", "sdFecal", "sdResp"))
datsd
datmean$StedV <- datsd$value
datmean
weekscontrol$Trat = rep("Control", 9)
weekstreat$Trat = rep("BEO", 9)
dat <- rbind(weekstreat, weekscontrol)
dat1 <- melt(dat, id.vars=c("Week", "Tratamento"))
datmean <- filter(dat1, variable==c("meanMR", "meanFecal", "meanResp"))
datmean$Type <- c(rep("MR", 6), rep("Fecal", 6), rep("Resp", 6))
datsd <- filter(dat1, variable==c("sdMR", "sdFecal", "sdResp"))
datmean$StedV <- datsd$value
datmean
q <- ggplot(datmean, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()
library(ggplot2)
q <- ggplot(datmean, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()
q
weekscontrol <- datacontrol %>%
group_by(Week) %>%
summarise(meanMR=mean(MR), meanFecal=mean(Fecal), meanResp=mean(Resp), sdMR=sd(MR), sdFecal=sd(Fecal), sdResp=sd(Resp))
weekstreat <- datatreat %>%
group_by(Week) %>%
summarise(meanMR=mean(MR), meanFecal=mean(Fecal), meanResp=mean(Resp), sdMR=sd(MR), sdFecal=sd(Fecal), sdResp=sd(Resp))
weekscontrol$Trat = rep("Control", 9)
weekstreat$Trat = rep("BEO", 9)
dat <- rbind(weekstreat, weekscontrol)
dat1 <- melt(dat, id.vars=c("Week", "Tratamento"))
datmean <- filter(dat1, variable==c("meanMR", "meanFecal", "meanResp"))
datmean$Type <- c(rep("MR", 6), rep("Fecal", 6), rep("Resp", 6))
datsd <- filter(dat1, variable==c("sdMR", "sdFecal", "sdResp"))
datmean$StedV <- datsd$value
dat <- rbind(weekstreat, weekscontrol)
dat1 <- melt(dat, id.vars=c("Week", "Trat"))
datmean <- filter(dat1, variable==c("meanMR", "meanFecal", "meanResp"))
datmean$Type <- c(rep("MR", 6), rep("Fecal", 6), rep("Resp", 6))
datsd <- filter(dat1, variable==c("sdMR", "sdFecal", "sdResp"))
datmean$StedV <- datsd$value
datmean
q <- ggplot(datmean, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()
q
datmean
q <- ggplot(datmean, aes(x=Week, y=value, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=value-StedV, ymax=value+StedV), width=0.5, size=0.3) +
theme_minimal()
q
r <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()
r
View(dat4)
View(datmean)
dat
filter(dat1, variable==c("meanMR", "meanFecal", "meanResp"))
dat
meanstreat
dat4 <- read.csv("~/Downloads/Graphs final 3.csv")
dat4
p <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_grid(Type~., scales="free") +
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV))
p
o <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_grid(Type~., scales="free") +
geom_line(position=pd, size=0.3)+
geom_point(position=pd)+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3, position=pd) +
theme_minimal()
p <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_grid(Type~., scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3)
p
p <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_grid(Type~., scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()
p
p <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_grid(Type~., scales="free") +
geom_line(size=0.5)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.5) +
theme_minimal()
p
dat4
r <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(Week), breaks = Week)
r <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week), breaks = dat4$Week)
r
r <- ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week))
r
ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week), breaks = dat4$Week)
ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point()+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week), breaks = dat4$Week)
ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point(size=0.2)+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week), breaks = dat4$Week)
ggplot(dat4, aes(x=Week, y=Response, group=Trat, color=Trat)) +
facet_wrap(Trat~Type, scales="free") +
geom_line(size=0.3)+
geom_point(size=0.5)+
geom_errorbar(aes(ymin=Response-StedV, ymax=Response+StedV), width=0.5, size=0.3) +
theme_minimal()+
scale_x_continuous("Week", labels = as.character(dat4$Week), breaks = dat4$Week)
View(data)
View(meanstreat)
library(dplyr)
library(ggplot2)
library(compare)
setwd("/Users/Susan 1/Documents/GitHub/causal992_project/data")
#Load matches
data <- read.csv("../data/results-final-small.csv")
#Load data before matching
balance <- read.csv("../data/data-stacked.csv")
#making the covariates the same for both data sets
intersect(names(data), names(balance))
names(data) %in% names(balance)
names(balance) %in% names(data)
names(data)[2:6]
names(balance)[2]
colnames(balance)[2] <- "cov_wave"
names(balance)
names(data)
names(balance) %in% names(data)
names(data) %in% names(balance)
names(data)
balance <- read.csv("../data/data-cleaned.csv")
#Load data before matching
balance <- read.csv("../data/data-stacked.csv")
names(balance)
#making the covariates the same for both data sets
intersect(names(data), names(balance))
names(data) %in% names(balance)
names(balance) %in% names(data)
names(data)[2:6]
names(balance)[2]
colnames(balance)[2] <- "cov_wave"
names(balance)
before <- balance[,c(2:41)]
names(before)
before$FIRST_WS[before$FIRST_WS == -1] <- 0
before$FIRST_WS[before$FIRST_WS > 0] <- 1
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
Xmat=propscore.model$x;
treated = propscore.model$y
treatedmat=Xmat[treated==1,]
controlmat.before=Xmat[treated==0,]
#standardized differences before matching
controlmean.before=apply(controlmat.before,2,mean,na.rm=TRUE);
before$FIRST_WS
str(before$FIRST_WS)
View(balance)
View(data)
balance$FIRST_WS
before <- balance[,c(2:41)]
before$FIRST_WS[before$FIRST_WS == -1] <- 0
before$FIRST_WS[before$FIRST_WS > 0] <- 1
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
Xmat = propscore.model$x;
treated = propscore.model$y
propscore.model$y
treatedmat = Xmat[treated==1,]
controlmat.before = Xmat[treated==0,]
treatedmat.before = Xmat[treated==1,]
controlmat.before = Xmat[treated==0,]
#standardized differences before matching
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean-controlmean.before)/sqrt((treatvar+controlvar)/2)
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
stand.diff.before
#standardized differences before matching
df = subset(before, select=c("RABYEAR", "RAEDYRS", "HATOTW", "RSMOKEV", "RSMOKEN", "RDRINKD", "RLTACTF", "RVGACTF", "RBMI", "RRISK", "RBEQLRG", "RAGENDER_1.Male", "RACE_ETHN_Hispanic", "RACE_ETHN_NonHispBlack", "RACE_ETHN_NonHispOther"))
treatedmat.before = subset(df, FIRST_WS==1)
treatedmat.before = subset(df, FIRST_WS==1)
#standardized differences before matching
df = subset(before, select=c("FIRST_WS", "RABYEAR", "RAEDYRS", "HATOTW", "RSMOKEV", "RSMOKEN", "RDRINKD", "RLTACTF", "RVGACTF", "RBMI", "RRISK", "RBEQLRG", "RAGENDER_1.Male", "RACE_ETHN_Hispanic", "RACE_ETHN_NonHispBlack", "RACE_ETHN_NonHispOther"))
treatedmat.before = subset(df, FIRST_WS==1)
controlmat.before = subset(df, FIRST_WS==0)
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
stand.diff.before
treatedmat.before = subset(before, FIRST_WS==1)
controlmat.before = subset(before, FIRST_WS==0)
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
stand.diff.before
#standardized differences before matching
treatedmat = subset(before, FIRST_WS==1)
controlmat = subset(before, FIRST_WS==0)
names(treatedmat)
treatedmat.before[,-c(1,2)]
treatedmat.before <- treatedmat[,-c(1,2)]
names(treatedmat.before)
treatedmat.before <- treatedmat[,-c(1,2)]
controlmat.before <- controlmat[,-c(1,2)]
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
stand.diff.before
# Standardized differences after matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
names(controlmat)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedma[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat = subset(data, treated==1)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
intersect(treatedmat.after, treatedmat.before)
intersect(names(treatedmat.after), names(treatedmat.before))
names(treatedmat.after) %in% names(treatedmat.control)
names(treatedmat.after) %in% names(treatedmat.before)
length(names(treatedmat.after))
length(names(treatedmat.before))
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
controlmean.after = apply(controlmat.after, 2, mean)
trt = Xmat[treated==1,]
cont = Xmat[treated==0,]
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
treatevar
treatvar
trt = Xmat[treated==1,]
treatvar = apply(trt, 2, var, na.rm=TRUE);
treatvar
# Standardized differences after matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
controlmean.after = apply(controlmat.after, 2, mean)
treatedmean.after = apply(treatedmat.after, 2, mean);
# Standardized differences after matching
stand.diff.after = (treatedmean.after-controlmean.after)/sqrt((treatvar+controlvar)/2);
length(treatvar)
treatvar = apply(treatedmat, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
# Standardized differences after matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
names(treatvar)
treatedmat.before <- treatedmat[,-c(1,2)]
controlmat.before <- controlmat[,-c(1,2)]
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
# Standardized differences after matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
controlmean.after = apply(controlmat.after, 2, mean)
treatedmean.after = apply(treatedmat.after, 2, mean);
# Standardized differences after matching
stand.diff.after = (treatedmean.after-controlmean.after)/sqrt((treatvar+controlvar)/2);
length(treatvar)
length(treatmean.before)
length(treatmean.after)
length(treatedmean.after)
names(treatmean.before)
before <- balance[,c(2:41)]
before$FIRST_WS[before$FIRST_WS == -1] <- 0
before$FIRST_WS[before$FIRST_WS > 0] <- 1
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
Xmat = propscore.model$x;
treated = propscore.model$y
#standardized differences before matching
treatedmat = subset(before, FIRST_WS==1)
controlmat = subset(before, FIRST_WS==0)
treatedmat.before <- treatedmat[,-c(1,2)]
controlmat.before <- controlmat[,-c(1,2)]
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
# Standardized differences after matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
controlmean.after = apply(controlmat.after, 2, mean)
treatedmean.after = apply(treatedmat.after, 2, mean);
# Standardized differences after matching
stand.diff.after = (treatedmean.after-controlmean.after)/sqrt((treatvar+controlvar)/2);
standBeforeAfter = cbind(stand.diff.before,stand.diff.after)
colnames(standBeforeAfter ) = c("Before Match (Standardized Diff)",
"After Match (Standardized Diff)")
knitr::kable(round(abs(standBeforeAfter),3), caption = "Differences in Covariates (Before and After)")
library(ggplot2)
abs.stand.diff.before=abs(stand.diff.before[-1])
abs.stand.diff.after=abs(stand.diff.after)
library(ggplot2)
abs.stand.diff.before=abs(stand.diff.before)
abs.stand.diff.after=abs(stand.diff.after)
covariates=names(stand.diff.before)
plot.dataframe = data.frame(abs.stand.diff=c(abs.stand.diff.before,abs.stand.diff.after), covariates=rep(covariates,2), type=c(rep("Before",length(covariates)), rep("After",length(covariates))))
ggplot(plot.dataframe,aes(x=abs.stand.diff,y=covariates))+geom_point(size=5,aes(shape=factor(type)))+scale_shape_manual(values=c(4,1))+geom_vline(xintercept=c(.1,.2),lty=2)
library(dplyr)
library(ggplot2)
library(compare)
#Load matches
data <- read.csv("../data/results-final-small.csv")
#Load data before matching
balance <- read.csv("../data/data-stacked.csv")
#Load data before matching
balance <- read.csv("../data/data-stacked.csv")
#making the covariates the same for both data sets
#intersect(names(data), names(balance))
#names(data) %in% names(balance)
#names(balance) %in% names(data)
#names(data)[2:6]
#names(balance)[2]
colnames(balance)[2] <- "cov_wave"
before <- balance[,c(2:41)]
#making an outcome variable for before matching
before$FIRST_WS[before$FIRST_WS == -1] <- 0
before$FIRST_WS[before$FIRST_WS > 0] <- 1
##Propensity scores
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
##Propensity scores
propscore.model = glm(FIRST_WS ~ ., family=binomial, x=TRUE, y=TRUE, data=before);
Xmat = propscore.model$x;
treated = propscore.model$y
treated = propscore.model$y
##Before matching
treatedmat = subset(before, FIRST_WS==1)
##Before matching
treatedmat = subset(before, FIRST_WS==1)
controlmat = subset(before, FIRST_WS==0)
#get rid of outcome, treated, id variables etc..
treatedmat.before <- treatedmat[,-c(1,2)]
controlmat.before <- controlmat[,-c(1,2)]
controlmean.before = apply(controlmat.before, 2, mean, na.rm=TRUE);
treatmean.before = apply(treatedmat.before, 2, mean, na.rm=TRUE);
treatvar = apply(treatedmat.before, 2, var, na.rm=TRUE);
controlvar = apply(controlmat.before, 2, var, na.rm=TRUE);
#Standardized differences before matching
stand.diff.before = (treatmean.before-controlmean.before)/sqrt((treatvar+controlvar)/2)
##After matching
controlmat = subset(data, treated==0)
treatedmat = subset(data, treated==1)
#get rid of outcome, treated, id variables etc..
controlmat.after <- controlmat[,-c(1, 2, 3, 4, 5, 6, 7)]
treatedmat.after <- treatedmat[,-c(1, 2, 3, 4, 5, 6, 7)]
controlmean.after = apply(controlmat.after, 2, mean)
treatedmean.after = apply(treatedmat.after, 2, mean);
# Standardized differences after matching
stand.diff.after = (treatedmean.after-controlmean.after)/sqrt((treatvar+controlvar)/2);
##Making table standardized differences
standBeforeAfter = cbind(stand.diff.before,stand.diff.after)
colnames(standBeforeAfter ) = c("Before Match (Standardized Diff)",
"After Match (Standardized Diff)")
knitr::kable(round(abs(standBeforeAfter),3), caption = "Differences in Covariates (Before and After)")
library(ggplot2)
abs.stand.diff.before=abs(stand.diff.before[-1])
abs.stand.diff.after=abs(stand.diff.after)
covariates=names(stand.diff.before[-1])
plot.dataframe = data.frame(abs.stand.diff=c(abs.stand.diff.before,abs.stand.diff.after), covariates=rep(covariates,2), type=c(rep("Before",length(covariates)), rep("After",length(covariates))))
##Making table standardized differences
standBeforeAfter = cbind(stand.diff.before,stand.diff.after)
standBeforeAfter
library(ggplot2)
abs.stand.diff.before=abs(stand.diff.before)
abs.stand.diff.after=abs(stand.diff.after)
covariates=names(stand.diff.before)
plot.dataframe = data.frame(abs.stand.diff=c(abs.stand.diff.before,abs.stand.diff.after), covariates=rep(covariates,2), type=c(rep("Before",length(covariates)), rep("After",length(covariates))))
ggplot(plot.dataframe,aes(x=abs.stand.diff,y=covariates))+geom_point(size=5,aes(shape=factor(type)))+scale_shape_manual(values=c(4,1))+geom_vline(xintercept=c(.1,.2),lty=2)
# Load data and functions/libraries
source("helpers.R")
getwd()
# Load data and functions/libraries
setwd("/Documents/GitHub/causal992_project")
# Load data and functions/libraries
setwd("/Users/Susan 1/Documents/GitHub/causal992_project")
source("helpers.R")
?source
# Load data and functions/libraries
setwd("/Users/Susan 1/Documents/GitHub/causal992_project/code")
source("helpers.R")
install.packages("HDMD", dependencies=TRUE)
install.packages("fastDummies", dependencies=TRUE)
source("helpers.R")
rm(list=ls())
# Load data and functions/libraries
setwd("/Users/Susan 1/Documents/GitHub/causal992_project/code")
source("helpers.R")
results_final = read.csv('../data/results-final.csv')
View(results_final)
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-treated, -outcome) %>%
arrange(pair_ID)
results_final = read.csv('../data/results-final.csv')
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-treated, -outcome) %>%
arrange(pair_ID)
filter(results_final, treated == 1)
?select
View(expand.ind.upto)
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-treated, -outcome) %>%
arrange(pair_ID)
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-starts_with(treated), -starts_with(outcome)) %>%
arrange(pair_ID)
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-outcome) %>%
arrange(pair_ID)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-treated, -outcome) %>%
arrange(pair_ID)
# Load data and functions/libraries
setwd("/Users/Susan 1/Documents/GitHub/causal992_project/code")
source("helpers.R")
results_final = read.csv('../data/results-final.csv')
# Find covariates for which we have exact matching
### Subset results into treated and control
treated = filter(results_final, treated == 1) %>%
select(-treated, -outcome) %>%
arrange(pair_ID)
View(results_final)
